services:
  secret_stash:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: secret_stash
    environment:
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://postgres_secret_stash/${SECRET_STASH_DB_NAME}'
      SPRING_DATASOURCE_USERNAME: '${SECRET_STASH_DB_USER}'
      SPRING_DATASOURCE_PASSWORD: '${SECRET_STASH_DB_PASSWORD}'
      SPRING_PROFILES_ACTIVE: '${SPRING_PROFILES}'
    ports:
      - "8081:8081"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    depends_on:
      postgres_secret_stash:
        condition: service_healthy
  postgres_secret_stash:
    container_name: "postgres_secret_stash"
    image: 'postgres:17.4'
    environment:
      POSTGRES_DB: '${SECRET_STASH_DB_NAME}'
      POSTGRES_PASSWORD: '${SECRET_STASH_DB_PASSWORD}'
      POSTGRES_USER: '${SECRET_STASH_DB_USER}'
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${SECRET_STASH_DB_USER} -d ${SECRET_STASH_DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
  keycloak:
    container_name: 'keycloak'
    image: quay.io/keycloak/keycloak:26.1
    command:
      - start
      - --import-realm
    environment:
      KC_HOSTNAME: 'keycloak'
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_BOOTSTRAP_ADMIN_USERNAME: '${KEYCLOAK_ADMIN_USER}'
      KC_BOOTSTRAP_ADMIN_PASSWORD: '${KEYCLOAK_ADMIN_PASSWORD}'
      KC_DB: 'postgres'
      KC_DB_URL: 'jdbc:postgresql://postgres_keycloak/${KEYCLOAK_DB_NAME}'
      KC_DB_USERNAME: '${KEYCLOAK_DB_USER}'
      KC_DB_PASSWORD: '${KEYCLOAK_DB_PASSWORD}'
    volumes:
      - ./realms:/opt/keycloak/data/import
    ports:
      - '8080:8080'
    restart: always
    depends_on:
      - postgres_keycloak
  postgres_keycloak:
    container_name: "postgres_keycloak"
    image: 'postgres:17.4'
    environment:
      POSTGRES_DB: '${KEYCLOAK_DB_NAME}'
      POSTGRES_PASSWORD: '${KEYCLOAK_DB_PASSWORD}'
      POSTGRES_USER: '${KEYCLOAK_DB_USER}'
    ports:
      - '5433:5432'
